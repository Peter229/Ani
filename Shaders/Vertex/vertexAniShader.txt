#version 330 core
const int MAX_JOINTS = 58;

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoord;
layout (location = 3) in vec4 aBoneWeights;
layout (location = 4) in ivec4 aBoneIndex;

out vec2 TexCoord;
out vec3 ObjPos;
out vec3 Normal;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 jointTransforms[MAX_JOINTS];

//uniform int type;

void main() {

	mat4 matTransform = jointTransforms[aBoneIndex.x] * aBoneWeights.x;
	matTransform += jointTransforms[aBoneIndex.y] * aBoneWeights.y;
	matTransform += jointTransforms[aBoneIndex.z] * aBoneWeights.z;
	float finalWeight = 1.0f - (aBoneWeights.x + aBoneWeights.y + aBoneWeights.z);
	matTransform += jointTransforms[aBoneIndex.w] * finalWeight;
	
	//matTransform = mat4(1.0);

	vec4 ObjPos = matTransform * vec4(aPos, 1.0);
	vec4 objNormal = matTransform * vec4(aNormal, 0.0);

	mat4 projViewModel = projection * view * model;

	//vec4 ObjPos = vec4(aPos, 1.0);

	vec4 oPosition = projViewModel * ObjPos;
	gl_Position = oPosition;
	TexCoord = aTexCoord;
	//ObjPos = vec3(model * vec4(ObjPos, 1.0));
	Normal = objNormal.xyz;
}